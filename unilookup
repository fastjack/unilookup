#!/usr/bin/env python2

# (C) Mia Nordentoft 2016
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import codecs
from terminaltables import AsciiTable
import math

dir = os.path.dirname(__file__)

UTF8Reader = codecs.getreader('utf8')
sys.stdin = UTF8Reader(sys.stdin)

def main():
    # Read input
    for line in sys.stdin:
        chars = []
        for char in line:
            chars.append(hex(ord(char))[2:].upper().zfill(4))
        
        # Find characters
        output = {}
        data = open(os.path.join(dir, 'UnicodeData.txt'))
        line = data.readline()
        while line != "":
            line = line[:-1] # Remove newline
            info = line.split(';')
            
            if info[0] in chars:
                indices = [i for i, x in enumerate(chars) if x == info[0]]
                for i in indices:
                    output[i] = info

                if not indices:
                    output[i] = None

            line = data.readline()

        tableData = [
            [ 'character', 'byte', 'UTF-32', 'glyph', 'name' ]
        ]

        byte = 0
        for i in output:
            info = output[i]

            if info is None:
                num = int(chars[i], 16)
                name = "CHARACTER NOT IN UNICODE 8.0.0"
            else:
                num = int(info[0], 16)
                name = info[1]
                if name == "<control>":
                    name = info[10]

            #byteLength = int(math.ceil(math.log(num, 2) / 8))
            
            # https://en.wikipedia.org/wiki/UTF-8#Description
            if num >= 0x10000:
                byteLength = 4
            elif num >= 0x800:
                byteLength = 3
            elif num >= 0x80:
                byteLength = 2
            else:
                byteLength = 1


            utf32 = hex(num)[2:].upper().zfill(6)
            glyph = unichr(num)

            tableData.append([ str(i), str(byte), utf32, glyph, name ])

            byte += byteLength

        table = AsciiTable(tableData)
        table.inner_column_border = False
        table.outer_border = False
        print table.table

try:
    main()
except KeyboardInterrupt:
    try:
        sys.exit(0)
    except SystemExit:
        os._exit(0)
